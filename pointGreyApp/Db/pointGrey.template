## pointGreyDCAM.template
## Template database file to control the features of a DCAM camera.
##

## VideoMode
record(mbbo, "$(P)$(R)VideoMode") {
  field(PINI, "NO")
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT) 0)PG_VIDEO_MODE")
}

record(mbbi, "$(P)$(R)VideoMode_RBV") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT) 0)PG_VIDEO_MODE")
}

## Format7Mode
record(mbbo, "$(P)$(R)Format7Mode") {
  field(PINI, "NO")
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT) 0)PG_FORMAT7_MODE")
}

record(mbbi, "$(P)$(R)Format7Mode_RBV") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT) 0)PG_FORMAT7_MODE")
}

## Framerate when the camera is not in the ROI/format7 mode
record(mbbo, "$(P)$(R)FrameRate") {
  field(PINI, "NO")
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT) 0)PG_FRAME_RATE")
}

record(mbbi, "$(P)$(R)FrameRate_RBV") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT) 0)PG_FRAME_RATE")
}

## Format 7 pixel format
record(mbbo, "$(P)$(R)PixelFormat") {
  field(PINI, "NO")
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT) 0)PG_PIXEL_FORMAT")
}

record(mbbi, "$(P)$(R)PixelFormat_RBV") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT) 0)PG_PIXEL_FORMAT")
}

# Dropped frames
record(longout, "$(P)$(R)DroppedFrames") {
  field(PINI, "YES")
  field(DTYP, "asynInt32")
  field(OUT,  "@asyn($(PORT) 0)PG_DROPPED_FRAMES")
}

# Dropped frames
record(longin, "$(P)$(R)DroppedFrames_RBV") {
  field(DTYP, "asynInt32")
  field(INP,  "@asyn($(PORT) 0)PG_DROPPED_FRAMES")
  field(SCAN, "I/O Intr")
}

# Readout time
record(ao, "$(P)$(R)ReadoutTime") {
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(OUT,  "@asyn($(PORT) 0)PG_READOUT_TIME")
  field(PREC, "1")
  field(VAL, "1.0")
}

record(ai, "$(P)$(R)ReadoutTime_RBV") {
  field(DTYP, "asynFloat64")
  field(INP,  "@asyn($(PORT) 0)PG_READOUT_TIME")
  field(PREC, "1")
  field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)FrameRateAbs")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT) 0)PG_FRAME_RATE_ABS")  
   field(PREC, "3")
   field(VAL,  "10")
}

record(ai, "$(P)$(R)FrameRateAbs_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT) 0)PG_FRAME_RATE_ABS")
   field(PREC, "3")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)SerialNumber")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)PG_SERIAL_NUMBER")
}

record(longin, "$(P)$(R)ImagesDropped")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)PG_DROPPED_FRAMES")
   field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(R)FirmwareVersion")
{
   field(PINI, "YES")
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT) 0)PG_FIRMWARE_VERSION")
}

record(stringin, "$(P)$(R)SoftwareVersion")
{
   field(PINI, "YES")
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT) 0)PG_SOFTWARE_VERSION")
}
