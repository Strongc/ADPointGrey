## pointGreyProperty.template

# Set the value (int32)
record(ao, "$(P)$(R)$(PROPERTY)") {
  field(PINI, "$(PINI)")
  field(DTYP, "asynInt32")
  field(DESC, "$(DESC)")
  field(OUT, "@asyn($(PORT) $(N))PG_PROP_VAL")
}

# Read the value (int32)
record(ai, "$(P)$(R)$(PROPERTY)_RBV") {
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT) $(N))PG_PROP_VAL")
  field(SCAN, "I/O Intr")
}

## Set the control mode (manual = user configured /auto = camera sets values)
record(bo, "$(P)$(R)$(PROPERTY)_CTRL") {
  field(PINI, "$(PINI)")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT) $(N))PG_PROP_MODE")
  field(ZNAM, "Manual")
  field(ONAM, "Auto")
}

## Read back the control mode 
record(bi, "$(P)$(R)$(PROPERTY)_CTRL_RBV") {
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT) $(N))PG_PROP_MODE")
  field(ZNAM, "Manual")
  field(ONAM, "Auto")
  field(SCAN, "I/O Intr")
}

## Read whether the camera supports this feature
record(bi, "$(P)$(R)$(PROPERTY)_AVL") {
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT) $(N))PG_PROP_AVAILABLE")
  field(ZNAM, "not available")
  field(ONAM, "available")
  field(SCAN, "I/O Intr")
}

# Read value boundaries
record(ai, "$(P)$(R)$(PROPERTY)_MIN") {
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT) $(N))PG_PROP_VAL_MIN")
  field(SCAN, "I/O Intr")
  field(FLNK, "$(P)$(R)$(PROPERTY)_DRVL")
}

# Set DRLV field of the value PV
record(ao, "$(P)$(R)$(PROPERTY)_DRVL") {
  field(DOL, "$(P)$(R)$(PROPERTY)_MIN NPP NMS")
  field(OMSL, "closed_loop")
  field(OUT, "$(P)$(R)$(PROPERTY).DRVL NPP NMS")
  field(FLNK, "$(P)$(R)$(PROPERTY)_LOPR")
}
# Set LOPR field of the value PV
record(ao, "$(P)$(R)$(PROPERTY)_LOPR") {
  field(DOL, "$(P)$(R)$(PROPERTY)_MIN NPP NMS")
  field(OMSL, "closed_loop")
  field(OUT, "$(P)$(R)$(PROPERTY).LOPR NPP NMS")
}
record(ai, "$(P)$(R)$(PROPERTY)_MAX") {
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT) $(N))PG_PROP_VAL_MAX")
  field(SCAN, "I/O Intr")
  field(FLNK, "$(P)$(R)$(PROPERTY)_DRVH")
}
# Set DRLH field of the value PV
record(ao, "$(P)$(R)$(PROPERTY)_DRVH") {
  field(DOL, "$(P)$(R)$(PROPERTY)_MAX NPP NMS")
  field(OMSL, "closed_loop")
  field(OUT, "$(P)$(R)$(PROPERTY).DRVH NPP NMS")
  field(FLNK, "$(P)$(R)$(PROPERTY)_HOPR")
}
# Set HOPR field of the value PV
record(ao, "$(P)$(R)$(PROPERTY)_HOPR") {
  field(DOL, "$(P)$(R)$(PROPERTY)_MAX NPP NMS")
  field(OMSL, "closed_loop")
  field(OUT, "$(P)$(R)$(PROPERTY).HOPR NPP NMS")
}

## Read whether the camera supports absolute (floating point) control of this feature 
record(bi, "$(P)$(R)$(PROPERTY)_ABS_AVL") {
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT) $(N))PG_PROP_ABSOLUTE")
  field(ZNAM, "not available")
  field(ONAM, "available")
  field(SCAN, "I/O Intr")
}

# Set the feature absolute value (floating point)
record(ao, "$(P)$(R)$(PROPERTY)_ABS") {
  field(PINI, "$(PINI_ABS)")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT) $(N))PG_PROP_VAL_ABS")
  field(PREC, "3")
}

# Read the feature absolute value
record(ai, "$(P)$(R)$(PROPERTY)_ABS_RBV") {
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT) $(N))PG_PROP_VAL_ABS")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
}

# Read the feature absolute value max boundary
record(ai, "$(P)$(R)$(PROPERTY)_ABS_MAX") {
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT) $(N))PG_PROP_VAL_ABS_MAX")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(FLNK, "$(P)$(R)$(PROPERTY)_ABS_DRVH")
}
# Set DRLH field of the value PV
record(ao, "$(P)$(R)$(PROPERTY)_ABS_DRVH") {
  field(DOL, "$(P)$(R)$(PROPERTY)_ABS_MAX NPP NMS")
  field(OMSL, "closed_loop")
  field(OUT, "$(P)$(R)$(PROPERTY)_ABS.DRVH NPP NMS")
  field(FLNK, "$(P)$(R)$(PROPERTY)_ABS_HOPR")
}
# Set HOPR field of the value PV
record(ao, "$(P)$(R)$(PROPERTY)_ABS_HOPR") {
  field(DOL, "$(P)$(R)$(PROPERTY)_ABS_MAX NPP NMS")
  field(OMSL, "closed_loop")
  field(OUT, "$(P)$(R)$(PROPERTY)_ABS.HOPR NPP NMS")
}

# Read the feature absolute value min boundary
record(ai, "$(P)$(R)$(PROPERTY)_ABS_MIN") {
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT) $(N))PG_PROP_VAL_ABS_MIN")
  field(PREC, "3")
  field(SCAN, "I/O Intr")
  field(FLNK, "$(P)$(R)$(PROPERTY)_ABS_DRVL")
}

# Set DRLV field of the value PV
record(ao, "$(P)$(R)$(PROPERTY)_ABS_DRVL") {
  field(DOL, "$(P)$(R)$(PROPERTY)_ABS_MIN NPP NMS")
  field(OMSL, "closed_loop")
  field(OUT, "$(P)$(R)$(PROPERTY)_ABS.DRVL NPP NMS")
  field(FLNK, "$(P)$(R)$(PROPERTY)_ABS_LOPR")
}
# Set LOPR field of the value PV
record(ao, "$(P)$(R)$(PROPERTY)_ABS_LOPR") {
  field(DOL, "$(P)$(R)$(PROPERTY)_ABS_MIN NPP NMS")
  field(OMSL, "closed_loop")
  field(OUT, "$(P)$(R)$(PROPERTY)_ABS.LOPR NPP NMS")
}


